// Autogenerated with DRAKON Editor 1.31

package main
import (
	"fmt"
)




func  binarySearch(data [] int, value int) int {
    // item 6
    low := 0
    high := len(data) - 1
    for {
        // item 10
        if low <= high {
            
        } else {
            break
        }
        // item 22
        mid := (low + high)/2
        // item 230001
        if data [mid] > value {
            // item 33
            high = mid -1
        } else {
            // item 230002
            if data [mid] < value {
                // item 31
                low = mid + 1
            } else {
                // item 230003
                if data [mid] == value {
                    
                } else {
                    // item 230004
                    panic("Not expected condition.")
                }
                // item 32
                return mid
            }
        }
    }
    // item 36
    return -1
}

func  main()  {
    // item 18
    data := []int {2,4,21,34,43,48,51,56,63}
    // item 39
    fmt.Println("Input data --->", data)
    // item 19
    var value int = 111
    // item 20
    index := binarySearch(data, value)
    // item 40
    if index != -1 {
        // item 43
        fmt.Printf("value %d\n",
         value, "exists")
    } else {
        // item 44
        fmt.Println("value", value, 
        "does not exist")
    }
}


